from openpyxl import load_workbook, Workbook
import sqlite3
from datetime import datetime
import os
from django.conf import settings

valores = {
'02/1998' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'03/1998' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'04/1998' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'05/1998' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'06/1998' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'07/1998' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'08/1998' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'09/1998' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'10/1998' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'11/1998' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'12/1998' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'01/1999' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'02/1999' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'03/1999' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'04/1999' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'05/1999' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'06/1999' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'07/1999' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'08/1999' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'09/1999' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'10/1999' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'11/1999' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'12/1999' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'01/2000' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'02/2000' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'03/2000' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'04/2000' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'05/2000' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'06/2000' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'07/2000' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'08/2000' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'09/2000' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'10/2000' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'11/2000' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'12/2000' : [157.5, 157.5, 157.5, 157.5, 159.52, 167.5, 175.88, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'01/2001' : [180, 180, 180, 180, 180, 180, 180, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'02/2001' : [180, 180, 180, 180, 180, 180, 180, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'03/2001' : [180, 180, 180, 180, 180, 180, 180, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'04/2001' : [180, 180, 180, 180, 180, 180, 180, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'05/2001' : [180, 180, 180, 180, 180, 180, 180, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'06/2001' : [180, 180, 180, 180, 180, 180, 180, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'07/2001' : [180, 180, 180, 180, 180, 180, 180, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'08/2001' : [180, 180, 180, 180, 180, 180, 180, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'09/2001' : [180, 180, 180, 180, 180, 180, 180, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'10/2001' : [180, 180, 180, 180, 180, 180, 180, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'11/2001' : [180, 180, 180, 180, 180, 180, 180, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'12/2001' : [180, 180, 180, 180, 180, 180, 180, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'01/2002' : [180, 180, 180, 180, 180, 180, 180, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'02/2002' : [180, 180, 180, 180, 180, 180, 180, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'03/2002' : [180, 180, 180, 180, 180, 180, 180, 184.67, 193.91, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'04/2002' : [200, 200, 200, 200, 200, 200, 200, 200, 200, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'05/2002' : [200, 200, 200, 200, 200, 200, 200, 200, 200, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'06/2002' : [200, 200, 200, 200, 200, 200, 200, 200, 200, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'07/2002' : [200, 200, 200, 200, 200, 200, 200, 200, 200, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'08/2002' : [200, 200, 200, 200, 200, 200, 200, 200, 200, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'09/2002' : [200, 200, 200, 200, 200, 200, 200, 200, 200, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'10/2002' : [200, 200, 200, 200, 200, 200, 200, 200, 200, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'11/2002' : [200, 200, 200, 200, 200, 200, 200, 200, 200, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'12/2002' : [200, 200, 200, 200, 200, 200, 200, 200, 200, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'01/2003' : [200, 200, 200, 200, 200, 200, 200, 200, 200, 203.61, 213.78, 224.46, 235.69, 247.47, 259.86, 272.86, 286.49, 300.83, 315.87, 331.66, 348.23, 365.64, 383.92, 403.12, 423.27],
'02/2003' : [223.44, 223.44, 223.44, 223.44, 223.44, 223.44, 223.44, 223.44, 223.44, 233.62, 245.29, 257.55, 270.43, 283.95, 298.16, 313.08, 328.72, 345.17, 362.43, 380.55, 399.56, 419.54, 440.51, 462.54, 485.66],
'03/2003' : [223.44, 223.44, 223.44, 223.44, 223.44, 223.44, 223.44, 223.44, 223.44, 233.62, 245.29, 257.55, 270.43, 283.95, 298.16, 313.08, 328.72, 345.17, 362.43, 380.55, 399.56, 419.54, 440.51, 462.54, 485.66],
'04/2003' : [223.44, 223.44, 223.44, 223.44, 223.44, 223.44, 223.44, 223.44, 223.44, 233.62, 245.29, 257.55, 270.43, 283.95, 298.16, 313.08, 328.72, 345.17, 362.43, 380.55, 399.56, 419.54, 440.51, 462.54, 485.66],
'05/2003' : [240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 245.29, 257.55, 270.43, 283.95, 298.16, 313.08, 328.72, 345.17, 362.43, 380.55, 399.56, 419.54, 440.51, 462.54, 485.66],
'06/2003' : [240, 240.25, 240.51, 240.79, 241.08, 241.38, 241.7, 242.04, 242.39, 242.76, 248.32, 260.74, 273.78, 287.46, 301.85, 316.95, 332.79, 349.44, 366.91, 385.26, 404.5, 424.73, 445.96, 468.26, 491.67],
'07/2003' : [240, 240.5, 241.03, 241.58, 242.16, 242.76, 243.4, 244.07, 244.77, 245.51, 251.36, 263.92, 277.12, 290.98, 305.54, 320.82, 336.85, 353.71, 371.4, 389.96, 409.44, 429.93, 451.41, 473.98, 497.68],
'08/2003' : [240, 240.75, 241.54, 242.36, 243.23, 244.14, 245.1, 246.11, 247.15, 248.27, 254.39, 267.11, 280.47, 294.49, 309.22, 324.7, 340.92, 357.98, 375.88, 394.67, 414.39, 435.11, 456.86, 479.7, 503.68],
'09/2003' : [240, 241, 242.05, 243.15, 244.31, 245.53, 246.8, 248.14, 249.55, 251.03, 257.43, 270.29, 283.81, 298, 312.91, 328.57, 344.98, 362.25, 380.36, 399.38, 419.33, 440.3, 462.31, 485.43, 509.69],
'10/2003' : [240, 241.25, 242.56000000000003, 243.94, 245.39000000000001, 246.91, 248.50000000000003, 250.18, 251.94000000000003, 253.78, 260.46, 273.58, 287.16, 301.51, 316.6, 332.44, 349.05, 366.51, 384.84000000000003, 404.08, 424.27, 445.49, 467.75, 491.16, 515.7],
'11/2003' : [240, 241.5, 243.07000000000005, 244.73, 246.47000000000003, 248.31000000000003, 250.20000000000005, 252.19999999999993, 254.33000000000004, 256.54999999999995, 263.51000000000005, 276.65000000000003, 290.48999999999995, 305.02, 320.29, 336.31, 353.1, 370.78999999999996, 389.32000000000005, 408.79999999999995, 429.21, 450.68, 473.21, 496.89000000000004, 521.71],
'12/2003' : [240, 241.75, 243.58000000000007, 245.51999999999998, 247.55000000000004, 249.70000000000005, 251.90000000000006, 254.2299999999999, 256.72, 259.30999999999995, 266.55000000000007, 279.83000000000004, 293.8299999999999, 308.53, 323.98, 340.18, 357.16, 375.05999999999995, 393.80000000000007, 413.50999999999993, 434.15, 455.87, 478.65999999999997, 502.62000000000006, 527.72],
'01/2004' : [240, 242, 244.0900000000001, 246.30999999999997, 248.63000000000005, 251.09000000000006, 253.60000000000008, 256.2599999999999, 259.11, 262.06999999999994, 269.5900000000001, 283.01000000000005, 297.1699999999999, 312.03999999999996, 327.67, 344.05, 361.22, 379.3299999999999, 398.2800000000001, 418.2199999999999, 439.09, 461.06, 484.10999999999996, 508.3500000000001, 533.73],
'02/2004' : [240, 242.25, 244.6000000000001, 247.09999999999997, 249.71000000000006, 252.48000000000008, 255.3000000000001, 258.28999999999985, 261.5, 264.8299999999999, 272.6300000000001, 286.19000000000005, 300.5099999999999, 315.54999999999995, 331.36, 347.92, 365.28000000000003, 383.5999999999999, 402.7600000000001, 422.9299999999999, 444.03, 466.25, 489.55999999999995, 514.0800000000002, 539.74],
'03/2004' : [240, 242.5, 245.11000000000013, 247.88999999999996, 250.79000000000008, 253.8700000000001, 257.0000000000001, 260.3199999999998, 263.89, 267.5899999999999, 275.67000000000013, 289.37000000000006, 303.84999999999985, 319.05999999999995, 335.05, 351.79, 369.34000000000003, 387.8699999999999, 407.2400000000001, 427.6399999999999, 448.96999999999997, 471.44, 495.00999999999993, 519.8100000000002, 545.75],
'04/2004' : [240, 242.75, 245.64, 248.67, 251.85, 255.2, 258.70000000000016, 262.39, 266.26, 270.32, 278.67, 292.6, 307.23, 322.59, 338.73, 355.67, 373.45, 392.13, 411.72000000000014, 432.34999999999985, 453.90999999999997, 476.63, 500.4599999999999, 525.48, 551.76],
'05/2004' : [260, 260, 260, 260, 260, 260, 260.4000000000002, 264.37999999999977, 268.66999999999996, 273.1099999999999, 281.75000000000017, 295.7300000000001, 310.5299999999998, 326.0799999999999, 342.43, 359.53000000000003, 377.46000000000004, 396.40999999999985, 416.20000000000016, 437.05999999999983, 458.84999999999997, 481.82, 505.9099999999999, 531.2700000000002, 557.77],
'06/2004' : [260, 260, 260, 260, 260, 264.87, 270.61, 276.64, 282.97, 289.62, 299.91, 314.9, 330.65, 347.18, 364.54, 382.78, 401.91, 422.01, 443.12, 465.27, 488.53, 512.95, 538.59, 565.53, 593.8],
'07/2004' : [260, 260, 260, 260, 260, 264.87, 270.61, 276.64, 282.97, 289.62, 299.91, 314.9, 330.65, 347.18, 364.54, 382.78, 401.91, 422.01, 443.12, 465.27, 488.53, 512.95, 538.59, 565.53, 593.8],
'08/2004' : [260, 260, 260, 260, 260, 264.87, 270.61, 276.64, 282.97, 289.62, 299.91, 314.9, 330.65, 347.18, 364.54, 382.78, 401.91, 422.01, 443.12, 465.27, 488.53, 512.95, 538.59, 565.53, 593.8],
'09/2004' : [260, 260, 260, 260, 260, 264.87, 270.61, 276.64, 282.97, 289.62, 299.91, 314.9, 330.65, 347.18, 364.54, 382.78, 401.91, 422.01, 443.12, 465.27, 488.53, 512.95, 538.59, 565.53, 593.8],
'10/2004' : [260, 260, 260, 260, 260, 264.87, 270.61, 276.64, 282.97, 289.62, 299.91, 314.9, 330.65, 347.18, 364.54, 382.78, 401.91, 422.01, 443.12, 465.27, 488.53, 512.95, 538.59, 565.53, 593.8],
'11/2004' : [260, 260, 260, 260, 260, 264.87, 270.61, 276.64, 282.97, 289.62, 299.91, 314.9, 330.65, 347.18, 364.54, 382.78, 401.91, 422.01, 443.12, 465.27, 488.53, 512.95, 538.59, 565.53, 593.8]
}

def pesquisarBD(matricula):
        """
        Realiza todas as pesquisas no Banco de Dados sqlite
        """

        conn = sqlite3.connect('Fichas_nova.db')
        cur = conn.cursor()
        nome = cur.execute("SELECT nome FROM matriculas WHERE matricula=?", (matricula,)).fetchone()[0]
        verbas = cur.execute("""
                SELECT referencia, codrubrica, valor FROM fichas WHERE matricula=? AND (
                    codrubrica=101 OR codrubrica=150 OR codrubrica=126 OR codrubrica=175 OR
                    codrubrica=141 OR codrubrica=156 OR codrubrica=235 OR codrubrica=136 OR codrubrica=212
                )
        """, (matricula,)).fetchall()
        vencimentos = []
        gam = []
        titulacao = []
        gcet = []
        adic_tem_serv = []
        ferias = []
        for verba in verbas:
                match verba[1]:
                        case 101:
                                vencimentos.append(verba)
                        case 150:
                                gam.append(verba)
                        case 126 | 175:
                                titulacao.append(verba)
                        case 141 | 156 | 235:
                                gcet.append(verba)
                        case 136:
                                adic_tem_serv.append(verba)
                        case 212:
                                ferias.append(verba)

        resultado={'nome':nome, 'matricula':matricula, 'vencimentos':vencimentos, 'gam':gam, 'titulacao':titulacao, 'gcet':gcet, 'adic_tem_serv':adic_tem_serv, 'ferias':ferias}
        cur.close()
        conn.close()
        return resultado


def preencherexcel(dados, return_wb=False):
    """
    Preenche o arquivo Excel com os dados obtidos do banco de dados
    """

    excel_path = os.path.join(settings.BASE_DIR, "Descompressao", "Cálculos HT 2.0 - Descompressão.xlsm")
    wb = load_workbook(filename=excel_path, read_only=False, keep_vba=True)
    ws = wb.active
    ws.title = "Descompressão"
    ws.cell(row=1, column=4).value = dados['nome']
    ws.cell(row=2, column=4).value = dados['matricula']
    ws.cell(row=6, column=1).value = "Relatório de Atualização Mensal - " + dados['nome'] + " - Matrícula " + str(dados['matricula'])

    x=10
    while x <= 91:
            for row in dados['vencimentos']:
                    mesresultado = datetime.strptime(row[0], '%m/%Y')
                    if ws.cell(row=x, column=1).value == mesresultado:
                            ws.cell(row=x, column=3).value = row[2]
##                for row in dados['niveis']:
##                        mesresultado = datetime.strptime(row[0], '%m/%Y')
##                        if (row[2] == 1727 or row[2] == 3001 or row[2] == 3007 or row[2] == 3014 or row[2] == 3020 or row[2] == 3032 or row[2] == 3039 or row[2] == 3045 or row[2] == 3051
##                        or row[2] == 3057 or row[2] == 3064 or row[2] == 3065 or row[2] == 3066 or row[2] == 3072 or row[2] == 8002 or row[2] == 99999):
##                                try:
##                                        #print(row[0])
##                                        ws.cell(row=x, column=2).value = valores[row[0]].index(ws.cell(row=x, column=3).value)+1
##                                except (KeyError, ValueError):
##                                        ws.cell(row=x, column=2).value = 0
##                        else:
##                                if ws.cell(row=x, column=1).value == mesresultado:
##                                        ws.cell(row=x, column=2).value = int(row[1][-2:])
            for row in dados['gam']:
                    mesresultado = datetime.strptime(row[0], '%m/%Y')
                    if ws.cell(row=x, column=1).value == mesresultado:
                            ws.cell(row=x, column=7).value = row[2]
            for row in dados['titulacao']:
                    mesresultado = datetime.strptime(row[0], '%m/%Y')
                    if ws.cell(row=x, column=1).value == mesresultado:
                            ws.cell(row=x, column=10).value = row[2]/float(ws.cell(row=x, column=3).value)
            for row in dados['gcet']:
                    mesresultado = datetime.strptime(row[0], '%m/%Y')
                    if ws.cell(row=x, column=1).value == mesresultado:
                            ws.cell(row=x, column=12).value = row[2]/float(ws.cell(row=x, column=3).value)
            for row in dados['adic_tem_serv']:
                    mesresultado = datetime.strptime(row[0], '%m/%Y')
                    if ws.cell(row=x, column=1).value == mesresultado:
                            ws.cell(row=x, column=14).value = 0 if float(ws.cell(row=x, column=3).value) == 0 else (row[2]/float(ws.cell(row=x, column=3).value))
                            #ws.cell(row=x, column=14).value = row[2]/float(ws.cell(row=x, column=3).value)
            for row in dados['ferias']:
                    mesresultado = datetime.strptime(row[0], '%m/%Y')
                    if ws.cell(row=x, column=1).value == mesresultado:
                            ws.cell(row=x, column=16).value = row[2]/float(ws.cell(row=x, column=3).value)
            x += 1	

    if return_wb:
        return wb
    #wb.save('cálculos/'+str(dados['matricula'])+'.xlsm')
    #print('Salvo cálculo ' + str(dados['matricula'])+'.xlsm - ' + str(matriculas.index(matricula)) + ' de ' + str(len(matriculas)))

